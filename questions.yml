labels:
  io.cattle.role: cluster # options are cluster/project
  io.rancher.app_min_version: 7.3.8
categories:
- Blog
- CMS
questions:
- variable: defaultImage
  default: true
  description: "Use default Docker image"
  label: Use Default Image
  type: boolean
  show_subquestion_if: false
  group: "Container Images"
  subquestions:
  - variable: image.repository
    default: "bitnami/spark"
    description: "Spark image name"
    type: string
    label: Spark Image Name
  - variable: image.tag
    default: "2.4.5-debian-10-r87"
    description: "Spark image tag"
    type: string
    label: Image Tag
- variable: master.debug
  default: false
  description: "Master Debug"
  type: boolean
  required: true
  label: Master Debug
  group: "Spark Settings"   
- variable: master.webPort
  default: "8080"
  description: "Spark master container ports"
  type: int
  required: true
  label: Spark Master Web Port
  group: "Spark Settings"
- variable: master.clusterPort
  default: "7077"
  description: "Spark Master Cluster ports"
  type: int
  required: true
  label: Spark Master Cluster Port
  group: "Spark Settings"
- variable: master.securityContext.enabled
  default: true
  description: "master securityContext enabled"
  type: boolean
  required: true
  label: Master SecurityContext Enabled
  group: "Spark Settings" 
- variable: master.securityContext.fsGroup
  default: "1001"
  description: "Group ID for the container"
  type: int
  required: true
  label: Master SecurityContext FsGroup
  group: "Spark Settings" 
- variable: master.securityContext.runAsUser
  default: "1001"
  description: "User ID for the container"
  type: int
  required: true
  label: Master SecurityContext RunAsUser
  group: "Spark Settings" 
- variable: worker.debug
  default: false
  description: "Worker Debug"
  type: boolean
  required: true
  label: Worker Debug
  group: "Spark Settings" 
- variable: worker.webPort
  default: "8081"
  description: "Spark worker container ports"
  type: int
  required: true
  label: Spark Worker Web Port
  group: "Spark Settings"
- variable: worker.clusterPort
  default: "7077"
  description: "Spark Worker Cluster ports"
  type: int
  required: true
  label: Spark Worker Cluster Port
  group: "Spark Settings" 
- variable: worker.replicaCount
  default: "2"
  description: "Set the number of workers"
  type: int
  required: true
  label: Worker ReplicaCount
  group: "Spark Settings"
- variable: worker.autoscaling.enabled
  default: false
  description: "Enable autoscaling depending on CPU"
  type: boolean
  required: true
  label: worker Autoscaling Enabled
  group: "Spark Settings" 
- variable: worker.securityContext.enabled
  default: true
  description: "Enable security context"
  type: boolean
  required: true
  label: worker SecurityContext Enabled
  show_subquestion_if: true
  group: "Spark Settings" 
  subquestions:
  - variable: worker.securityContext.fsGroup
    default: "1001"
    description: "Group ID for the container"
    type: int
    required: true
    label: worker SecurityContext FsGroup
    group: "Spark Settings"
  - variable: worker.securityContext.runAsUser
    default: "1001"
    description: "User ID for the container"
    type: int
    required: true
    label: Worker SecurityContext RunAsUser
    group: "Spark Settings"
- variable: worker.autoscaling.enabled
  default: false
  description: "Enable autoscaling depending on CPU"
  type: boolean
  required: true
  label: Worker Autoscaling Enabled
  show_subquestion_if: false
  group: "Spark Settings" 
  subquestions:
  - variable: worker.autoscaling.CpuTargetPercentage
    default: "50"
    description: "k8s hpa cpu targetPercentage"
    type: int
    required: true
    label: worker Autoscaling CpuTargetPercentage
    group: "Spark Settings"
  - variable: worker.autoscaling.replicasMax
    default: "5"
    description: "Maximum number of workers when using autoscaling"
    type: int
    required: true
    label: worker Autoscaling ReplicasMax
    group: "Spark Settings"
- variable: security.passwordsSecretName
  default: ""
  description: "security passwords SecretName"
  type: password
  required: false
  label: security passwords SecretName
  group: "Security Settings"  
- variable: security.rpc.authenticationEnabled
  default: false
  description: "security rpc authenticationEnabled"
  type: boolean
  required: true
  label: security rpc authenticationEnabled
  group: "Security Settings" 
- variable: security.rpc.encryptionEnabled
  default: false
  description: "security rpc encryptionEnabled"
  type: boolean
  required: true
  label: security rpc encryptionEnabled
  group: "Security Settings" 
- variable: security.storageEncryptionEnabled
  default: false
  description: "security storageEncryption Enabled"
  type: boolean
  required: true
  label: security storageEncryption Enabled
  group: "Security Settings"
- variable: security.ssl.enabled
  default: false
  description: "security ssl enabled"
  type: boolean
  required: true
  label: security ssl enabled
  group: "Security Settings" 
- variable: security.ssl.needClientAuth
  default: false
  description: "security ssl needClientAuth"
  type: boolean
  required: true
  label: security ssl needClientAuth
  group: "Security Settings"
- variable: security.ssl.protocol
  default: "TLSv1.2"
  description: "security ssl protocol"
  type: string
  required: true
  label: security ssl protocol
  group: "Security Settings"
- variable: security.ssl.ssl-key-password
  default: ""
  description: "ssl key password"
  type: password
  required: false
  label: ssl key password
  group: "Security Settings"
- variable: security.ssl.ssl-keystore-password
  default: ""
  description: "ssl keystore password"
  type: password
  required: false
  label: ssl keystore password
  group: "Security Settings"
- variable: security.ssl.ssl-truststore-password
  default: ""
  description: "ssl truststore password"
  type: password
  required: false
  label: ssl truststore password
  group: "Security Settings"
- variable: persistence.enabled
  default: false
  description: "Enable persistent volume for Spark"
  type: boolean
  required: true
  label: Spark Persistent Volume Enabled
  show_subquestion_if: true
  group: "Spark Settings"
  subquestions:
  - variable: persistence.size
    default: "10Gi"
    description: "Spark Persistent Volume Size"
    type: string
    label: Spark Volume Size
  - variable: persistence.storageClass
    default: ""
    description: "If undefined or null, uses the default StorageClass. Default to null"
    type: storageclass
    label: Default StorageClass for Spark
  - variable: persistence.existingClaim
    default: ""
    description: "If not empty, uses the specified existing PVC instead of creating new one"
    type: pvc
    label: Existing Persistent Volume Claim for Spark
- variable: ingress.enabled
  default: true
  description: "Expose app using Layer 7 Load Balancer - ingress"
  type: boolean
  label: Expose app using Layer 7 Load Balancer
  show_subquestion_if: true
  group: "Services and Load Balancing"
  subquestions:
  - variable: ingress.hosts[0].name
    default: "xip.io"
    description: "Hostname to your app installation"
    type: hostname
    required: true
    label: Hostname
- variable: service.webPort
  default: 80
  description: "service webPort"
  type: string
  required: true
  label: service webPort
  group: "Services and Load Balancing"  
- variable: service.clusterPort
  default: 7077
  description: "service clusterPort"
  type: string
  required: true
  label: service clusterPort
  group: "Services and Load Balancing"  
- variable: service.type
  default: "NodePort"
  description: "Spark Service type"
  type: enum
  show_if: "ingress.enabled=false"
  options:
  - "ClusterIP"
  - "NodePort"
  - "LoadBalancer"
  required: true
  label: Spark Service Type
  show_subquestion_if: "NodePort"
  group: "Services and Load Balancing"
  subquestions:
  - variable: service.nodePorts.http
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    show_if: "ingress.enabled=false&&serviceType=NodePort"
    label: NodePort Http Port
  - variable: service.nodePorts.https
    default: ""
    description: "NodePort https port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    show_if: "ingress.enabled=false&&serviceType=NodePort"
    label: NodePort Https Port
